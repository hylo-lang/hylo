name: Build and test

on:
  push:
    branches: [ main, rewrite ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
    name: Swift ${{ matrix.swift.version }} on ${{ matrix.host.os }}
    strategy:
      fail-fast: false
      matrix:
        host: [
          { type: macos, os: macos-latest },
          { type: linux, os: ubuntu-latest, test-options: --enable-code-coverage },
          { type: windows, os: windows-latest },
        ]
        swift: [
          { version: "5.7", windows-branch: "swift-5.8-branch", windows-tag: "5.8-DEVELOPMENT-SNAPSHOT-2022-12-29-a" }
        ]
    runs-on: ${{ matrix.host.os }}
    steps:
    - name: Setup swift (non-Windows)
      uses: swift-actions/setup-swift@v1
      if: matrix.host.type != 'windows'
      with:
        swift-version: ${{ matrix.swift.version }}

    - name: Setup swift (Windows)
      uses: compnerd/gha-setup-swift@main
      if: matrix.host.type == 'windows'
      with:
        branch: ${{ matrix.swift.windows-branch }}
        tag: ${{ matrix.swift.windows-tag }}

    - run: |
        git config --global core.autocrlf input
    - uses: actions/checkout@v3

    - name: Swift version
      run: swift --version

    - name: Build (Debug)
      run: swift build -v -c debug
    - name: Test (Debug)
      run: swift test -v -c debug ${{matrix.host.test-options}}
    - name: Check code coverage (Debug)
      uses: mattpolzin/swift-codecov-action@0.7.3
      if: matrix.host.type == 'linux'
      with:
        SORT_ORDER: +cov
        MINIMUM_COVERAGE: 77

    - name: Build (Release)
      run: swift build -v -c release
    - name: Test (Release)
      run: swift test -c release -Xswiftc -enable-testing ${{matrix.host.test-options}}
    - name: Check code coverage (Release)
      uses: mattpolzin/swift-codecov-action@0.7.3
      if: matrix.host.type == 'linux'
      with:
        SORT_ORDER: +cov
        MINIMUM_COVERAGE: 77
