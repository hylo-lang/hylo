name: Build and test

on:
  push:
    branches: [ main, rewrite ]
    paths-ignore:
      - "Docs/**"
      - "**.md"
      - "README.md"
      - "LICENSE"
      - ".gitignore"
  pull_request:
    branches: [ "**" ]
    paths-ignore:
      - "Docs/**"
      - "**.md"
      - "README.md"
      - "LICENSE"
      - ".gitignore"

jobs:
  build-devcontainer:
    name: "Devcontainer: ${{ matrix.host.os }}/${{ matrix.configuration }}"
    strategy:
      fail-fast: false
      matrix:
        host: [
          { type: linux, os: ubuntu-latest,
            build-options: "-v --build-tests -Xswiftc -enable-testing",
            test-options: "-v --enable-code-coverage"
          }
        ]
        configuration: [ "debug", "release" ]

    runs-on: ${{ matrix.host.os }}
    steps:
    - uses: actions/checkout@v3

    - run: git config --global core.autocrlf input

    - name: Build and Test
      uses: devcontainers/ci@v0.3
      with:
        runCmd: |
          swift build -c ${{ matrix.configuration }}  ${{ matrix.host.build-options }} &&
          swift test -c ${{ matrix.configuration }} ${{ matrix.host.test-options }}

    - name: Check code coverage
      uses: mattpolzin/swift-codecov-action@0.7.3
      with:
        SORT_ORDER: +cov
        MINIMUM_COVERAGE: 84
        CODECOV_JSON: .build/${{ matrix.configuration }}/codecov/*.json

  build-native:
    name: "Native: ${{ matrix.host.os }}/${{ matrix.configuration }}"
    strategy:
      fail-fast: false
      matrix:
        host: [
          {
              type: macos, os: macos-latest,
            build-options: "-v --build-tests -Xswiftc -enable-testing",
            # No coverage support on MacOS
            test-options: "-v"
          }
        ]
        swift: [
          { version: "5.8" }
        ]
        configuration: [ "debug", "release" ]

    runs-on: ${{ matrix.host.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - run: git config --global core.autocrlf input

    - name: Setup swift
      uses: swift-actions/setup-swift@v1
      with:
        swift-version: ${{ matrix.swift.version }}

    - run: swift --version

    - name: Setup LLVM
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "15.0"

    - run: llvm-config --version

    - name: Generate LLVM pkgconfig file
      run: |
        swift package resolve &&
        .build/checkouts/Swifty-LLVM/Tools/make-pkgconfig.sh llvm.pc &&
        cat llvm.pc

    - name: Build (${{ matrix.configuration }})
      run: |
        export PKG_CONFIG_PATH=$PWD &&
        swift build -c ${{ matrix.configuration }} ${{ matrix.host.build-options }}

    - name: Test (${{ matrix.configuration }})
      run: |
        export PKG_CONFIG_PATH=$PWD &&
        swift test -c ${{ matrix.configuration }} ${{ matrix.host.test-options }}
