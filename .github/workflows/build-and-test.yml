name: Build and test

on:
  push:
    branches: [ main, rewrite ]
  pull_request:
    branches: [ main, rewrite ]

jobs:
  build:
    name: Swift ${{ matrix.swift.version }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12, ubuntu-22.04, windows-latest]
        swift: [
          { version: "5.7", branch: "swift-5.8-branch", tag: "5.8-DEVELOPMENT-SNAPSHOT-2022-12-29-a" }
        ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: swift-actions/setup-swift@v1
      if: matrix.os != 'windows-latest'
      with:
        swift-version: ${{ matrix.swift.version }}
    - uses: compnerd/gha-setup-swift@main
      if: matrix.os == 'windows-latest'
      with:
        branch: ${{ matrix.swift.branch }}
        tag: ${{ matrix.swift.tag }}
    - run: |
        git config --global core.autocrlf input
      if: matrix.os == 'windows-latest'
    - uses: actions/checkout@v3
    - name: Swift version
      run: swift --version
    - name: Build (Debug)
      run: swift build -v -c debug
    - name: Test (Debug)
      run: swift test -v -c debug --enable-code-coverage
    - uses: mattpolzin/swift-codecov-action@0.7.3
      if: matrix.os == 'ubuntu-22.04'
      with:
        SORT_ORDER: +cov
        MINIMUM_COVERAGE: 74
    - name: Build (Release)
      run: swift build -v -c release
    - name: Test (Release)
      run: swift --version test -v -c release -Xswiftc -enable-testing --enable-code-coverage
    - uses: mattpolzin/swift-codecov-action@0.7.3
      if: matrix.os == 'ubuntu-22.04'
      with:
        SORT_ORDER: +cov
        MINIMUM_COVERAGE: 74
