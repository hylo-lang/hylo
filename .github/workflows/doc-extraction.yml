name: Extract And Publish Documentation

defaults:
  run:
    shell: 'bash -eo pipefail {0}'

on:
  push:
    branches: [ main, fix-doc-generation ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  determine-version:
    name: "Determine compiler version from git tag"
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-tag.outputs.version }}
    steps:
    - id: get-tag
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          version=${GITHUB_REF#refs/tags/}
        else
          version=""
        fi
        echo "version=$version" >> $GITHUB_OUTPUT

  build:
    needs: determine-version
    if: github.repository == 'hylo-lang/hylo'
    strategy:
      fail-fast: false
      # Use a matrix just for another level of variables
      matrix:
        os: [ macos-13 ]
        configuration: [debug]
        include:
          - HYLO_LLVM_BUILD_RELEASE: 20240303-215025
          - HYLO_LLVM_BUILD_TYPE: MinSizeRel
          - HYLO_LLVM_DOWNLOAD_URL: https://github.com/hylo-lang/llvm-build/releases/download
          - HYLO_LLVM_VERSION: 17.0.6
          - package_suffix: .tar.zst
          - unpackage_command: tar -x --zstd -f
          # https://github.com/apple/swift/issues/72121
          - windows_only: '# WINDOWS ONLY:'

          - os: macos-13
            triple_suffix: apple-darwin23.3.0
            build_platform_subdirectory: x86_64-apple-macosx

    runs-on: macos-13
    env:
      llvm_url_prefix: ${{ matrix.HYLO_LLVM_DOWNLOAD_URL }}/${{ matrix.HYLO_LLVM_BUILD_RELEASE }}
      llvm_package_basename: llvm-${{ matrix.HYLO_LLVM_VERSION }}-x86_64-${{ matrix.triple_suffix }}-${{ matrix.HYLO_LLVM_BUILD_TYPE }}
      swift-version: '5.9'

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        show-progress: false

    - name: Set compiler version
      run: ./Tools/set-hc-version.sh ${{ needs.determine-version.outputs.version }}
      shell: bash

    - name: Install Jazzy
      run: |
        sudo gem install jazzy

    - name: Setup swift
      uses: SwiftyLab/setup-swift@latest
      with:
        swift-version: ${{ env.swift-version }}

    - name: Install LLVM
      # 7z doesn't support decompressing from a stream or we'd do this all as one statement. Maybe
      # we should find a way to use zstd on windows.
      run: >-
        curl --no-progress-meter -L -O
        -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"
        ${{ env.llvm_url_prefix }}/${{ env.llvm_package_basename }}${{ matrix.package_suffix }}

        ${{ matrix.unpackage_command }} ${{ env.llvm_package_basename }}${{ matrix.package_suffix }}

    - name: Create LLVM pkgconfig file and make it findable
      run: |
        set -ex -o pipefail
        PATH="${{ github.workspace }}/${{ env.llvm_package_basename }}/bin:$PATH" \
          hylo/Tools/make-pkgconfig.sh llvm.pc
        echo 'PKG_CONFIG_PATH=${{ github.workspace }}' >> $GITHUB_ENV
      shell: bash

    - name: Prepare Shell Environment
      # The format of the ${GITHUB_ENV} file is extremely restrictive; it apparently only supports
      # lines of the form:
      #
      #   <variable-name>=<one-line-of-text>
      #
      # And a multiline version
      # (https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings).
      # It is not interpreted directly by a shell, so any quotes or other special characters are
      # taken literally.

      # FIXME: REF_URL_COMPONENT computation is probably wrong for some refs.
      run: |
        echo "PKG_CONFIG_PATH=$PWD
        REPO_SANS_OWNER=${GITHUB_REPOSITORY##*/}
        REF_URL_COMPONENT=${GITHUB_REF##*/}
        EXTRACTION_TARGETS=$(
          swift package dump-package |
          jq '.targets | map(select(.type | test("^(regular|executable)$"))) | .[].name' |
          xargs
        )
        HYLO_ENABLE_DOC_GENERATION=1
        " >> "${GITHUB_ENV}"

    - uses: actions/cache@v4
      with:
        path: .build
        key: ${{ runner.os }}-${{ matrix.configuration }}-spm-${{ hashFiles('hylo/**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.configuration }}-spm-

    - name: Extract with DocC
      run: |
        export PKG_CONFIG_PATH
        for TARGET in ${EXTRACTION_TARGETS}; do
          mkdir -p _site/docc/"$TARGET"
          Tools/retry-once swift package --allow-writing-to-directory ./_site \
          generate-documentation \
          --target "$TARGET" \
          --output-path _site/docc/"${TARGET}" \
          --experimental-documentation-coverage --level brief \
          --enable-inherited-docs \
          --transform-for-static-hosting \
          --hosting-base-path "${REPO_SANS_OWNER}/docc/${TARGET}" \
          --source-service github \
          --source-service-base-url "https://github.com/${GITHUB_REPOSITORY}/blob/${REF_URL_COMPONENT}" \
          --checkout-path "$(pwd)"
        done

    - name: Extract with Jazzy
      run: |
        export PKG_CONFIG_PATH
        for TARGET in ${EXTRACTION_TARGETS}; do
          mkdir -p _site/jazzy/"$TARGET"
          jazzy \
          --source-host-files-url "https://github.com/${GITHUB_REPOSITORY}/blob/${REF_URL_COMPONENT}" \
          --module $(echo "$TARGET" | sed -e 's/-/_/g') \
          --module-version "${{ github.event.release.tag_name }}" \
          --copyright "Â© $(date '+%Y') The Hylo Authors. (Last updated: $(date '+%Y-%m-%d'))" \
          --config .jazzy.yml \
          --output _site/jazzy/"$TARGET" \
          --min-acl private
        done

    - name: Generate Index Page
      run: |
        Tools/gyb.py \
        --line-directive '<!-- file: %(file)s line: %(line)s -->' \
        -DROOT_URL="https://hylo-lang.org/${REPO_SANS_OWNER}" \
        -DEXTRACTION_TARGETS="${EXTRACTION_TARGETS}" \
        -DGITHUB_REPOSITORY="${GITHUB_REPOSITORY}" \
        Tools/doc-index.html.gyb -o _site/index.html

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Fix permissions
      run: |
        chmod -v -R +rX "_site/" | while read -r line; do
          echo "::warning title=Invalid file permissions automatically fixed::$line"
        done

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    if: github.repository == 'hylo-lang/hylo'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
