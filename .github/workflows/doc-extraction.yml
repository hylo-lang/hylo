name: Extract And Publish Documentation

on:
  push:
    branches: [ main, doc-generation ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - run: git config --global core.autocrlf input

    - name: Setup swift
      uses: swift-actions/setup-swift@v1
      with:
        swift-version: 5.8

    - run: swift --version

    - name: Setup LLVM
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "15.0"

    - run: llvm-config --version

    - name: Generate LLVM pkgconfig file
      run: |
        set -eo pipefail
        swift package resolve
        .build/checkouts/Swifty-LLVM/Tools/make-pkgconfig.sh llvm.pc
        cat llvm.pc

    - name: Extract with DocC
      run: |
        set -eo pipefail
        export PKG_CONFIG_PATH=$PWD

        for TARGET in $(
          swift package dump-package |
          jq '.targets | map(select(.type | test("^(regular|executable)$"))) | .[].name' |
          xargs
        ); do
          mkdir -p _site/docc/"$TARGET"
          swift package --allow-writing-to-directory ./_site \
          generate-documentation \
          --target "$TARGET" \
          --output-path _site/docc/"$TARGET" \
          --experimental-documentation-coverage --level brief \
          --enable-inherited-docs \
          --transform-for-static-hosting \
          --hosting-base-path Hylo/docc/"$TARGET"
        done

    - name: Extract with Jazzy
      run: |
        set -eo pipefail
        gem install jazzy

        export PKG_CONFIG_PATH=$PWD

        for TARGET in $(
          swift package dump-package |
          jq '.targets | map(select(.type | test("^(regular|executable)$"))) | .[].name' |
          xargs
        ); do
          mkdir -p _site/jazzy/"$TARGET"
          jazzy \
          --source-host-files-url "https://github.com/${GITHUB_REPOSITORY}/tree/${GITHUB_REF}" \
          --module "$TARGET" \
          --module-version "${{ github.event.release.tag_name }}" \
          --copyright "Â© $(date '+%Y') The Hylo Authors. (Last updated: $(date '+%Y-%m-%d'))" \
          --config .jazzy.yml \
          --output _site/jazzy/"$TARGET" \
          --min-acl private
        done

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Fix permissions
      run: |
        chmod -v -R +rX "_site/" | while read line; do
          echo "::warning title=Invalid file permissions automatically fixed::$line"
        done

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
