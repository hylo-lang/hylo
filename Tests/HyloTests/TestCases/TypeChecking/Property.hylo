//- typeCheck expecting: .success

type A: Deinitializable {
  public memberwise init
  public property x: Int { let { 0 } }
}

type B<T>: Deinitializable {
  public memberwise init
}

type C<T>: Deinitializable {
  public memberwise init
  public property x: B<T> { .new() }
}

fun check<T>(_ x: T) {}

public fun main() {
  check<Int>(A().x)

  let a = C<Bool>().x
  check<B<Bool>>(a)
}
