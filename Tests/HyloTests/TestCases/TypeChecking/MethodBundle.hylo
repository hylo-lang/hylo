//- typeCheck expecting: .success

fun check<T>(_ x: T) {}

type A {

  memberwise init

  // Functional variants of a method bundle return instances of `{self: Self, Output}`, unless the
  // declared return type of the bundle is `Void`, in which case they return instances of `Self`.
  // In-place variants always return instances of `Output`.

  fun foo(_ x: Self) {
    let   { A() }
    sink  { A() }
    inout { () }
  }

  fun bar(_ x: Self) -> Int {
    let   { (self: A(), 1) }
    sink  { (self: A(), 1) }
    inout { 1 }
  }

  fun test() inout {
    let other = A()

    check<A>(foo(other))
    check<Void>(&foo(other))

    check<{self: A, Int}>(bar(other))
    check<Int>(&bar(other))
  }

}
