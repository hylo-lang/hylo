//- typeCheck expecting: failure

fun f<X, Y>(_ x: sink X, _ y: sink Y) -> X { x }

fun g<X>(_ a: X, _ b: X) -> X {}

fun h<X>(_ x0: sink X, _ x1: sink { b: X }) {}

fun check<T>(_ x: T) {}

public fun main() {
  let x0 = f(true, 42)
  check<Bool>(x0)

  let x1 = f(42, true)
  check<Int>(x1)

  let x2 = g(0, 42 as Float64)
  check<Float64>(x2)

  h((), (b: ()))

  //! @+1 diagnostic cannot pass value of type '{a: {}}' to parameter 'sink {}'
  h((a: ()), (b: ()))

  //! @+1 diagnostic cannot pass value of type '{b: Float64}' to parameter 'sink {b: Int}'
  h<Int>(0, (b: x2))
}
