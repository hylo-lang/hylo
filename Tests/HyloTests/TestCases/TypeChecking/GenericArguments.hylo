//- typeCheck expecting: failure

type Box<X> {
  public var contents: X
  public memberwise init
}

type Pair<X, Y> {
  public var first: X
  public var Second: Y
  public memberwise init
}

public fun main() {

  //! @+1 diagnostic not enough contextual information to infer generic arguments
  let x = Box

  //! @+1 diagnostic too many generic arguments to entity 'Box' (found 2, expected 1)
  let x = Box<Int, Int>

  //! @+1 diagnostic too few generic arguments to entity 'Pair' (found 1, expected 2)
  let y = Pair<Int>
}
