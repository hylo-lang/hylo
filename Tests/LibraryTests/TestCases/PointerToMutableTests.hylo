//- compileAndRun expecting: success

fun test_advance() {
  var c = PointerToMutable<Never>.allocate_bytes(
    count: MemoryLayout<Int>.stride(),
    aligned_at: 1)
  var d = PointerToMutable<Int>( type_punning: c )

  var e = d.advance(by: 1)
  var f = e.advance(by: -1)
  precondition(d == f)
  precondition(!(d == e))
  precondition(!(f == e))
}

fun test_initialize_pointee_lambda() {
  let p = PointerToMutable<Int>.allocate(count: 1)
  p.unsafe_initialize_pointee(fun (_ i: set Int) -> Void { &i = 42 })
  let y = p.unsafe_pointee()
  precondition(y == 42)
  p.deallocate()
}

fun test_initialize_pointee_direct() {
  let p = PointerToMutable<Int>.allocate(count: 1)
  p.unsafe_initialize_pointee(42)
  let y = p.unsafe_pointee()
  precondition(y == 42)
  p.deallocate()
}

public fun main() {
  test_advance()
  test_initialize_pointee_lambda()
  test_initialize_pointee_direct()
}
