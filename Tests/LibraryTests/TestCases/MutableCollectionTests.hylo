//- compileAndRun expecting: success

fun fill(_ a: inout Array<Int>, to limit: Int) {
  var i = 0
  while i < limit {
    &a.append(i.copy())
    i += 1
  }
}

fun test_rotate() -> Bool {

  let N = 17

  var failed = false
  var i = 0
  while i < N {

    var a = Array<Int>()
    fill(&a, to: N)

    &a.rotate(to_start_at: i)
    var j = 0

    while j < N {
      if a[j] != (i + j) % N {
        &failed = true
      }
      j += 1
    }
    i += 1
  }
  return !failed
}

public fun main() {
  precondition(test_rotate())
}
