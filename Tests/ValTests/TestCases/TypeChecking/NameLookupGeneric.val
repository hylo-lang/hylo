//! expect-success

type B<X> {
  var foo: X
  public memberwise init

  public fun bar() -> B<Int> { B(foo: 0) }
  public fun bar(x: Int) -> B<Int> { B(foo: 0) }
}

fun check<T>(_ x: T) {}

public fun main() {
  let b0 = B(foo: true)
  check<B<Bool>>(b0)

  let b1 = b0.bar().bar()
  check<B<Int>>(b1)
}
