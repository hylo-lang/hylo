//- compileAndRun expecting: success

trait Copier {
  type Original: Copyable
  property read: Original { let }
}

extension Copier {
  public fun take() -> Original { read.copy() }
}

type Machine: Deinitializable, Copier {
  public typealias Original = Bool
  public let wrapped: Bool
  public memberwise init
  public property read: Bool { wrapped }
}

public fun main() {
  let m = Machine(wrapped: true)
  precondition(m.take())
}
