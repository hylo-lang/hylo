//- compileAndRun expecting: success

trait P {
  fun f() -> Int
  property n: Int { let }
}

type A<T>: Deinitializable, P {
  var x: Int
  memberwise init
  public fun f() -> Int { x.copy() }
  public property n: Int { let { yield x } }
}

public fun main() {
  precondition(A<Bool>(x: 42).f() == 42)
  precondition(A<Bool>(x: 42).n.copy() == 42)
}
