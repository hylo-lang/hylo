//- compileAndRun expecting: success

trait A {
  type P: Regular
}

extension A {
  public fun g(_ p: sink P) {
    _ = (p.copy(), p.copy())
  }
}

type X: A, Deinitializable {
  public typealias P = Int
  public memberwise init
}

public fun main() {
  X().g(1)
}
