/// A value that can be either `true` or `false`.
public type Bool {

  var value: Builtin.i1

  memberwise init

  /// Creates an instance with value `false`.
  public init() {
    &self.value = Builtin.zeroinitializer_i1()
  }

  /// Returns negation of `self`.
  public fun prefix! () -> Bool {
    Bool(value: Builtin.icmp_eq_i1(value, Builtin.zeroinitializer_i1()))
  }

  /// Returns `true` if `self` is equal to `other`. Otherwise, returns `false`.
  public fun infix== (_ other: Self) -> Bool {
    Bool(value: Builtin.icmp_eq_i1(value, other.value))
  }

  /// Returns `true` if `self` is not equal to `other`. Otherwise, returns `false`.
  public fun infix!= (_ other: Self) -> Bool {
    Bool(value: Builtin.icmp_ne_i1(value, other.value))
  }
}

public conformance Bool: Copyable {

  public fun copy() -> Self {
    Bool(value: value)
  }

}
