internal typealias pthread_t = UInt64

internal type pthread_attr_t : Deinitializable {
  var p0: PointersStorage8
  var p1: PointersStorage4
  var p2: PointersStorage2

  internal init() {
    &self.p0 = .new()
    &self.p1 = .new()
    &self.p2 = .new()
  }

}

internal type pthread_mutex_t : Deinitializable, Movable {
  var sig: c_long
  var p0: PointersStorage4
  var p1: PointersStorage2
  var p2: PointersStorage1

  init(sig: c_long) {
    &self.sig = sig.copy()
    &self.p0 = .new()
    &self.p1 = .new()
    &self.p2 = .new()
  }

  internal static fun regular() -> pthread_mutex_t {
    .new(sig: 0x32AAABA7)
  }
  internal static fun recursive() -> pthread_mutex_t {
    .new(sig: 0x32AAABA2)
  }

}

internal type pthread_mutexattr_t : Deinitializable {
  var sig: c_long
  var p0: PointersStorage1

  internal init(sig: c_long) {
    &self.sig = sig.copy()
    &self.p0 = .new()
  }

}


@ffi("pthread_attr_init")
internal fun pthread_attr_init(_ attr: PointerToMutable<pthread_attr_t>) -> c_int
@ffi("pthread_attr_setstacksize")
internal fun pthread_attr_setstacksize(_ attr: PointerToMutable<pthread_attr_t>, _ size: c_size_t) -> c_int
@ffi("pthread_attr_destroy")
internal fun pthread_attr_destroy(_ attr: PointerToMutable<pthread_attr_t>) -> c_int
@ffi("pthread_create")
internal fun pthread_create(_ thread: PointerToMutable<pthread_t>, _ attr: PointerToMutable<pthread_attr_t>, _ f: MemoryAddress, _ arg: MemoryAddress) -> c_int
@ffi("pthread_join")
internal fun pthread_join(_ thread: pthread_t, _ ret: PointerToMutable<MemoryAddress>) -> c_int
@ffi("pthread_detach")
internal fun pthread_detach(_ thread: pthread_t) -> c_int
@ffi("pthread_self")
internal fun pthread_self() -> pthread_t

@ffi("pthread_mutex_init")
internal fun pthread_mutex_init(_ mutex: PointerToMutable<pthread_mutex_t>, _ attr: PointerToMutable<pthread_mutexattr_t>) -> c_int
@ffi("pthread_mutex_lock")
internal fun pthread_mutex_lock(_ mutex: PointerToMutable<pthread_mutex_t>) -> c_int
@ffi("pthread_mutex_trylock")
internal fun pthread_mutex_trylock(_ mutex: PointerToMutable<pthread_mutex_t>) -> c_int
@ffi("pthread_mutex_unlock")
internal fun pthread_mutex_unlock(_ mutex: PointerToMutable<pthread_mutex_t>) -> c_int
@ffi("pthread_mutex_destroy")
internal fun pthread_mutex_destroy(_ mutex: PointerToMutable<pthread_mutex_t>) -> c_int