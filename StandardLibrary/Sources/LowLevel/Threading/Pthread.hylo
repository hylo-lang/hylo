internal typealias pthread_t = UInt64

internal type pthread_attr_t : Deinitializable {
  var p0: MemoryAddress
  var p1: MemoryAddress
  var p2: MemoryAddress
  var p3: MemoryAddress
  var p4: MemoryAddress
  var p5: MemoryAddress
  var p6: MemoryAddress
  var p7: MemoryAddress
  var p8: MemoryAddress
  var p9: MemoryAddress
  var p10: MemoryAddress
  var p11: MemoryAddress
  var p12: MemoryAddress
  var p13: MemoryAddress

  internal init() {
    &self.p0 = .null()
    &self.p1 = .null()
    &self.p2 = .null()
    &self.p3 = .null()
    &self.p4 = .null()
    &self.p5 = .null()
    &self.p6 = .null()
    &self.p7 = .null()
    &self.p8 = .null()
    &self.p9 = .null()
    &self.p10 = .null()
    &self.p11 = .null()
    &self.p12 = .null()
    &self.p13 = .null()
  }

}

@ffi("pthread_attr_init")
internal fun pthread_attr_init(_ attr: PointerToMutable<pthread_attr_t>) -> c_int
@ffi("pthread_attr_setstacksize")
internal fun pthread_attr_setstacksize(_ attr: PointerToMutable<pthread_attr_t>, _ size: c_size_t) -> c_int
@ffi("pthread_attr_destroy")
internal fun pthread_attr_destroy(_ attr: PointerToMutable<pthread_attr_t>) -> c_int
@ffi("pthread_create")
internal fun pthread_create(_ thread: PointerToMutable<pthread_t>, _ attr: PointerToMutable<pthread_attr_t>, _ f: MemoryAddress, _ arg: MemoryAddress) -> c_int
@ffi("pthread_join")
internal fun pthread_join(_ thread: pthread_t, _ ret: PointerToMutable<MemoryAddress>) -> c_int
@ffi("pthread_detach")
internal fun pthread_detach(_ thread: pthread_t) -> c_int
@ffi("pthread_self")
internal fun pthread_self() -> pthread_t
